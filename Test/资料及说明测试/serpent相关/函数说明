




# 获取窗口句柄id
self.window_id = self.window_controller.locate_window(self.window_name)
    WindowController类  对下面的类进行再封装   serpent/window_controller.py
    Win32WindowController类 操控窗口相关 获取的接口分开系统  serpent/window_controllers/win32_window_controller.py

    WindowController类 窗口类
    window_controller = WindowController()
    获取句柄 window_id = window_controller.locate_window(winname)
    移动窗口 window_controller.move_window(window_id, 0, 0)
    改变窗口 window_controller.resize_window(window_id, 300, 500)
    激活窗口 window_controller.bring_window_to_top(window_id)
    激活窗口 window_controller.focus_window(window_id)
    是否有焦点 focused = window_controller.is_window_focused(window_id)
    焦点窗口 focused = window_controller.get_focused_window_name()
    获取窗口大小位置 dwh = window_controller.get_window_geometry(window_id)



self.grab_latest_frame()
    FrameGrabber 类  抓取帧的类 可以从屏幕上抓取指定区域的帧
    FrameGrabber.start  开始抓取帧的循环，将抓取到的帧处理后存储到Redis缓存中。
    FrameGrabber.grab_frame  抓取帧的方法，使用mss库从屏幕上抓取指定区域的帧，并返回处理后的帧。
    _has_png_transformation_pipeline # # 判断是否存在PNG转换流水线的私有方法，用于判断帧转换流水线是否以"|PNG"结尾。
    get_frames # 类方法，从Redis缓存中获取指定索引的帧，并返回一个GameFrameBuffer对象
    get_frames_with_pipeline  # 类方法，从Redis缓存中获取指定索引的帧和转换后的帧，并返回两个GameFrameBuffer对象